SELECT Coursename, grade FROM CourseOfferRegistrations, Courses WHERE StudentId = %1% AND DegreeId = %2% AND CourseOfferRegistrations.CourseId = Courses.CourseId ORDER BY year, quartile, CourseOfferID;
SELECT distinct studentid FROM completeddegrees, studentregistrationstodegrees, GPA WHERE completeddegrees.studentregistrationid = studentregistrationstodegrees.studentregistrationid AND studentregistrationstodegrees.studentregistrationid = gpa.studentregistrationid AND gpa.gpa > %1% EXCEPT (SELECT studentid FROM courseofferregistrations WHERE grade < 5) ORDER BY studentid;
SELECT StudentRegistrationsToDegrees.DegreeId, CAST(count(*) filter (WHERE Students.Gender = 'F') AS FLOAT) / CAST(count(*) AS FLOAT) as percentage FROM StudentRegistrationsToDegrees, Students WHERE StudentRegistrationsToDegrees.StudentId = Students.StudentId AND NOT EXISTS (SELECT * FROM completeddegrees WHERE completeddegrees.StudentRegistrationId = StudentRegistrationsToDegrees.StudentRegistrationId) GROUP BY StudentRegistrationsToDegrees.DegreeId ORDER BY StudentRegistrationsToDegrees.DegreeId;
WITH StudentsinDegree AS (SELECT distinct students.studentid, students.gender from students, studentregistrationstodegrees, degrees where students.studentid = studentRegistrationsToDegrees.studentid AND studentregistrationstodegrees.degreeid = degrees.degreeid AND Degrees.Dept = %1%) SELECT 100.0 * (SUM(CASE WHEN Gender='F' THEN 1 ELSE 0 END)::DECIMAL / COUNT(studentsindegree.studentid)) as percentage FROM studentsindegree;
SELECT courseid, SUM(CASE WHEN nonnull.grade >= %1% THEN 1 ELSE 0 END)::DECIMAL / count(nonnull.grade) AS percentagePassing FROM (select courseofferid, courseid, grade from courseofferregistrations where grade is not null) as nonnull GROUP BY courseid ORDER BY courseid;
WITH max_grade_pc_1_2018 AS (SELECT COR.courseofferid, max(COR.grade) AS max_grade FROM courseofferregistrations COR WHERE COR.year = 2018 AND COR.quartile =1 GROUP BY COR.courseofferid), counts_excellent AS (SELECT studentID , count(courseofferregistrations.courseofferid) as counts FROM max_grade_pc_1_2018, courseofferregistrations WHERE max_grade_pc_1_2018.courseofferid = courseofferregistrations.courseofferid AND max_grade_pc_1_2018.max_grade = courseofferregistrations.grade GROUP BY studentid) SELECT studentID, counts FROM counts_excellent WHERE counts >= %1%;
SELECT 0;
WITH studentcounts as (SELECT courseofferid, year, quartile, courseid, count(studentregistrationid) as studentcount FROM courseofferregistrations GROUP BY courseofferid, year, quartile, courseid), assistantcounts as (SELECT courseofferid, count(studentregistrationid) as assistantcount FROM studentassistants GROUP BY courseofferid) SELECT courses.coursename, year, quartile from studentcounts, assistantcounts, courses where cast(studentcount as float)/50 > assistantcount AND studentcounts.courseofferid = assistantcounts.courseofferid AND studentcounts.courseid = courses.courseid;
